{"version":3,"file":"commonHelpers2.js","sources":["../src/js/products-api.js","../src/js/footer.js","../src/js/local-storage.js","../src/img/icone/symbol-defs.svg","../src/js/popular.js","../src/js/products-list.js","../src/js/scroll.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://food-boutique.b.goit.study/api/products';\n\nexport function getProducts(page, limit) {\n    return axios.get(`${BASE_URL}`, {\n        params: {\n            page: page,\n            limit: limit,\n        },\n    });\n};\n\n","document.addEventListener('DOMContentLoaded', () => {\n    const subscriptionForm = document.querySelector('.footer-sub-form');\n\n    subscriptionForm.addEventListener('submit', async (e) => {\n        e.preventDefault();\n\n        const emailInput = subscriptionForm.querySelector('.footer-email-input');\n        const email = emailInput.value;\n\n        // Перевірка валідності email\n        if (!emailInput.checkValidity()) {\n            alert('Please enter a valid email address.');\n            return;\n        }\n\n        // Об'єкт, що відправляється на сервер\n        const subscriptionData = { email };\n\n        try {\n            const response = await fetch('https://food-boutique.b.goit.study/api/subscription', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(subscriptionData),\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                alert(data.message);\n            } else if (response.status === 409) {\n                alert('This email is already subscribed.');\n            } else {\n                throw new Error('Failed to subscribe.');\n            }\n        } catch (error) {\n            alert('Error: ' + error.message);\n        }\n    });\n});\n","/* для імпорту функій в ваш файл застосовуйте\nimport { назва функції, назва функції } from './js/localStorage';\nнаприклад:\nimport { saveFilters, getFilters, updateFilter, saveCart, getCart, addToCart, removeFromCart, clearCart } from './js/localStorage';\n*/\n\n// Функція для збереження фільтрів у localStorage\nexport function saveFilters(filters) {\n    localStorage.setItem('productFilters', JSON.stringify(filters));\n}\n\n// Функція для отримання фільтрів з localStorage\nexport function getFilters() {\n    const savedFilters = localStorage.getItem('productFilters');\n    return savedFilters ? JSON.parse(savedFilters) : { keyword: null, category: null, page: 1, limit: 6 };\n}\n\n// Функція для оновлення певного фільтра\nexport function updateFilter(key, value) {\n    const filters = getFilters();\n    filters[key] = value;\n    saveFilters(filters);\n}\n\n// Функція для збереження кошика у localStorage\nexport function saveCart(cart) {\n    localStorage.setItem('shoppingCart', JSON.stringify(cart));\n}\n\n// Функція для отримання кошика з localStorage\nexport function getCart() {\n    const savedCart = localStorage.getItem('shoppingCart');\n    return savedCart ? JSON.parse(savedCart) : [];\n}\n\n// Додавання продукту до кошика\nexport function addToCart(productToAdd) {\n    const cart = getCart();\n    const existingProductIndex = cart.findIndex(item => item._id === productToAdd._id);\n\n    if (existingProductIndex > -1) {\n        // Збільшуємо кількість існуючого продукту в кошику\n        cart[existingProductIndex].quantity += 1;\n    } else {\n        // Додаємо новий продукт в кошик з кількістю 1\n        cart.push({ ...productToAdd, quantity: 1 });\n    }\n\n    saveCart(cart);\n}\n\n\n// Видалення продукту з кошика\nexport function removeFromCart(productId) {\n    const cart = getCart();\n    const updatedCart = cart.filter(item => item.id !== productId);\n    saveCart(updatedCart);\n}\n\n// Очищення кошика\nexport function clearCart() {\n    saveCart([]);\n}","export default \"__VITE_ASSET__58b6efc7__\"","import axios from 'axios';\nimport icons from '../img/icone/symbol-defs.svg';\nconst popularProductsURL =\n  'https://food-boutique.b.goit.study/api/products/popular';\n\nfunction renderPopularProducts(products) {\n  const productList = document.querySelector('.popular-product-list');\n\n  products.forEach(product => {\n    const listItem = document.createElement('li');\n    listItem.classList.add('popular-product-item');\n\n    listItem.innerHTML = `\n      <a class=\"popular-modal\">\n                 <div class=\"popular-img\">\n            <img class=\"popular-photo-item\" src=\"${product.img}\" alt=\"${product.name}\" width=\"56\" height=\"56\" loading=\"lazy\">\n          </div>  \n          <ul class=\"about-popular\">\n            <li class=\"name-popular-product\">${product.name}</li>\n            <li class=\"subname-popular-product\">Category: <span class=\"id-subname\">${product.category}</span></li>\n            <li class=\"subname-popular-product\">Size: <span class=\"id-subname\">${product.size}</span></li>\n            <li class=\"subname-popular-product\">Popularity: <span class=\"id-subname\">${product.popularity}</span></li>\n          </ul>\n          <button class='popular-cart-btn' type=\"button\">\n          <svg class=\"list-cart-svg-list\" width=\"12\" height=\"12\">\n<use href=\"'${icons}'#icon-heroicons-solid_shopping-cart-12x12 \"></use>\n         </svg></button>\n        </a>\n    `;\n\n    productList.appendChild(listItem);\n  });\n}\n\nasync function fetchPopularProducts() {\n  try {\n    const response = await axios.get(popularProductsURL);\n    return response.data; // Повертаємо список популярних продуктів з відповіді\n  } catch (error) {\n    console.error('Error fetching popular products:', error);\n    throw error; // Обробка помилки, якщо запит не вдалося виконати\n  }\n}\n\n// Викликаємо функцію для отримання списку популярних продуктів\nfetchPopularProducts()\n  .then(popularProducts => {\n    // Рендеримо список популярних продуктів\n    renderPopularProducts(popularProducts);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n    // Тут можна обробити помилку, якщо отримання популярних продуктів не вдалося\n  });\n","import icons from '../img/icone/symbol-defs.svg';\nimport { getProducts } from './products-api';\nimport { addToCart, getCart } from './local-storage';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport Pagination from 'tui-pagination';\n\nconst mainProductCard = document.querySelector('.main-box');\n// const formEl = document.querySelector('.search-form')\n\nasync function renderProducts(page = 1) {\n  let limit;\n\n  if (window.innerWidth >= 1440) {\n    limit = 9;\n  } else if (window.innerWidth >= 768) {\n    limit = 8;\n  } else {\n    limit = 6;\n  }\n\n  try {\n    const { data } = await getProducts(page, limit);\n    const { perPage, totalPages, results } = data;\n    const totalItems = perPage * totalPages;\n\n    mainProductCard.innerHTML = createMarkup(results) + `\n      <div id=\"tui-pagination-container\" class=\"tui-pagination\"></div>\n    `;\n\n    const container = document.getElementById('tui-pagination-container');\n    const pagination = new Pagination(container, {\n      totalItems: totalItems,\n      itemsPerPage: limit,\n      visiblePages: 4,\n      centerAlign: true,\n      currentPage: page,\n    });\n\n    pagination.on('beforeMove', event => {\n      const currentPage = event.page;\n      renderProducts(currentPage);\n    });\n\n    updateCartButtonIcons();\n  } catch (error) {\n    console.error('Error fetching products', error);\n  }\n}\n\n// Call the renderProducts function to automatically render the first page on page load\nrenderProducts();\n\nfunction createMarkup(arr) {\n  const markup = `<ul class=\"card-container-list\">${arr\n    .map(item => {\n      const categoryWithoutUnderscore = item.category.split('_').join(' ');\n      return `\n            <li class=\"photo-card-list\">\n                <a class=\"product-modal-list\" href=\"#\">\n                    <div class=\"img-container-list\">\n                        <img class=\"product-image-list\" src=\"${item.img}\" alt=\"${item.name} photo\" width=140 height=140 loading=\"lazy\" />\n                    </div>\n                    <div class=\"product-info-list\">\n                        <h2 class=\"product-name-list\">${item.name}</h2>\n                        <div class='product-atributes-list'>\n                            <p class=\"atributes-info-list\">\n                                <b class=\"atributes-list\">Category:</b> ${categoryWithoutUnderscore}\n                            </p>\n                            <p class=\"atributes-info-list\">\n                                <b class=\"atributes-list\">Size:</b> ${item.size}\n                            </p>\n                            <p class=\"atributes-info-list\">\n                                <b class=\"atributes-list\">Popularity:</b> ${item.popularity}\n                            </p>\n                        </div>\n                        </a>\n                        <div class=\"price-and-btn-list\">\n                            <h2 class=\"product-price-list\">$${item.price}</h2>\n                            <button class='cart-btn-list' type=\"button\" data-product-id=\"${item._id}\">          \n                                <svg class=\"list-cart-svg-list\" width=\"18\" height=\"18\" >\n                                    <use href=\"${icons}#icon-heroicons-solid_shopping-cart-18x18\">\n                                    </use>\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n            </li>\n        `;\n    })\n    .join('')}</ul>`;\n    setTimeout(() => {\n      document.querySelectorAll('.cart-btn-list').forEach(button => {\n        button.addEventListener('click', (e) => {\n          const productId = e.currentTarget.dataset.productId;\n          const product = arr.find(item => item._id === productId);\n          if (product) {\n            handleCartButtonClick(product, arr);\n          } else {\n            console.error('Product not found for ID:', productId);\n          }\n        });\n      });\n    }, 0);\n\n  return markup;\n}\n\nfunction handleCartButtonClick(product, arr) {\n  const cart = getCart();\n  const productInCart = cart.find(item => item._id === product._id);\n\n  if (productInCart) {\n    // Якщо продукт вже є у кошику, виведіть повідомлення і не додавайте його знову\n    console.log('Product is already in the cart');\n  } else {\n    // Якщо продукт немає у кошику, додайте його\n    addToCart(product);\n    updateCartButtonIcons(arr);\n  }\n}\n\nfunction updateCartButtonIcons(arr) {\n  const cart = getCart();\n  document.querySelectorAll('.cart-btn-list').forEach(button => {\n    const productId = button.dataset.productId;\n    const productInCart = cart.find(item => item._id === productId);\n\n    if (productInCart) {\n      button.innerHTML = `\n        <svg class=\"list-cart-svg-list\" width=\"18\" height=\"18\">\n          <use href=\"${icons}#icon-check\"></use>\n        </svg>\n      `;\n      button.disabled = true; // Заборонити кліки на кнопку\n    } else {\n      button.innerHTML = `\n        <svg class=\"list-cart-svg-list\" width=\"18\" height=\"18\">\n          <use href=\"${icons}#icon-heroicons-solid_shopping-cart-18x18\"></use>\n        </svg>\n      `;\n      button.disabled = false; // Дозволити кліки на кнопку\n    }\n  });\n}\n\n","window.onscroll = () => checkPosition();\n\n// тепер призначимо обробником подій трохи загальмовану функцію:\n; (() => {\n    window.addEventListener('scroll', throttle(checkPosition, 250));\n    window.addEventListener('resize', throttle(checkPosition, 250));\n})()\n\nasync function checkPosition() {\n    const body = document.querySelector('body');\n    // Нам потрібно знати висоту документа та висоту екрану:\n    const bodyHeight = document.body.offsetHeight;\n    const screenHeight = window.innerHeight;\n    // Записуємо, скільки пікселів користувач вже проскролив:\n    const scrolled = window.scrollY;\n    // Позначимо поріг, після наближення якого викликатимемо якусь дію. У нашому випадку – чверть екрана до кінця сторінки:\n    const threshold = bodyHeight - screenHeight / 4;\n    // Відстежуємо, де знаходиться низ екрана щодо сторінки:\n    const position = scrolled + screenHeight;\n\n    if (position > threshold) {\n        // Якщо ми перетнули смугу-поріг, викликаємо потрібну дію.\n        // await fetchPictures()\n        body.classList.add('body--no-transparency');\n    } else {\n        body.classList.remove('body--no-transparency');\n    }\n}\n\n\nfunction throttle(callee, timeout) {\n    // Обробку прокручування варто трохи пригальмовувати, щоб вона виконувалася трохи рідше і таким чином менше навантажувала браузер. Додамо функцію throttle()\n    let timer = null;\n\n    return function perform(...args) {\n        if (timer) return;\n\n        timer = setTimeout(() => {\n            callee(...args);\n\n            clearTimeout(timer);\n            timer = null;\n        }, timeout)\n    }\n}\n\n// Наступну частину коду копіюєте до себе\n// Слухач заганяємо в умову: активний, якщо карток більш однієї сторінки\n//  if (totalImages > perPage) {\n// window.addEventListener('scroll', handleScroll);\n//         }\n\n// Функція для бескінечного скролу\n// function handleScroll() {\n//     const { scrollTop, scrollHeight, clientHeight } = document.documentElement;\n\n//     if (scrollTop + clientHeight >= scrollHeight - 1) {\n// запускаємо функцію завантаження наступної сторінки\n// onLoadMore();\n//     }\n// }"],"names":["BASE_URL","getProducts","page","limit","axios","subscriptionForm","emailInput","email","subscriptionData","response","data","error","saveCart","cart","getCart","savedCart","addToCart","productToAdd","existingProductIndex","item","icons","popularProductsURL","renderPopularProducts","products","productList","product","listItem","fetchPopularProducts","popularProducts","mainProductCard","renderProducts","perPage","totalPages","results","totalItems","createMarkup","container","Pagination","event","currentPage","updateCartButtonIcons","arr","markup","categoryWithoutUnderscore","button","e","productId","handleCartButtonClick","checkPosition","throttle","body","bodyHeight","screenHeight","scrolled","threshold","callee","timeout","timer","args"],"mappings":"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"}