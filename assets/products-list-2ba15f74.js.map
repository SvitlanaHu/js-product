{"version":3,"file":"products-list-2ba15f74.js","sources":["../../src/img/icone/symbol-defs.svg","../../src/js/products-api.js","../../src/js/local-storage.js","../../src/js/products-list.js"],"sourcesContent":["export default \"__VITE_ASSET__e98efecf__\"","import axios from 'axios';\n\nconst BASE_URL = 'https://food-boutique.b.goit.study/api/products';\n\nexport function getProducts(page, limit) {\n    return axios.get(`${BASE_URL}`, {\n        params: {\n            page: page,\n            limit: limit,\n        },\n    });\n};\n\n","/* для імпорту функій в ваш файл застосовуйте\nimport { назва функції, назва функції } from './js/localStorage';\nнаприклад:\nimport { saveFilters, getFilters, updateFilter, saveCart, getCart, addToCart, removeFromCart, clearCart } from './js/localStorage';\n*/\n\n// Функція для збереження фільтрів у localStorage\nexport function saveFilters(filters) {\n    localStorage.setItem('productFilters', JSON.stringify(filters));\n}\n\n// Функція для отримання фільтрів з localStorage\nexport function getFilters() {\n    const savedFilters = localStorage.getItem('productFilters');\n    return savedFilters ? JSON.parse(savedFilters) : { keyword: null, category: null, page: 1, limit: 6 };\n}\n\n// Функція для оновлення певного фільтра\nexport function updateFilter(key, value) {\n    const filters = getFilters();\n    filters[key] = value;\n    saveFilters(filters);\n}\n\n// Функція для збереження кошика у localStorage\nexport function saveCart(cart) {\n    localStorage.setItem('shoppingCart', JSON.stringify(cart));\n}\n\n// Функція для отримання кошика з localStorage\nexport function getCart() {\n    const savedCart = localStorage.getItem('shoppingCart');\n    return savedCart ? JSON.parse(savedCart) : [];\n}\n\n// Додавання продукту до кошика\nexport function addToCart(productToAdd) {\n    const cart = getCart();\n    const existingProductIndex = cart.findIndex(item => item._id === productToAdd._id);\n\n    if (existingProductIndex > -1) {\n        // Збільшуємо кількість існуючого продукту в кошику\n        cart[existingProductIndex].quantity += 1;\n    } else {\n        // Додаємо новий продукт в кошик з кількістю 1\n        cart.push({ ...productToAdd, quantity: 1 });\n    }\n\n    saveCart(cart);\n}\n\n\n// Видалення продукту з кошика\nexport function removeFromCart(productId) {\n    const cart = getCart();\n    const updatedCart = cart.filter(item => item.id !== productId);\n    saveCart(updatedCart);\n}\n\n// Очищення кошика\nexport function clearCart() {\n    saveCart([]);\n}","import icons from '../img/icone/symbol-defs.svg';\nimport { getProducts } from './products-api';\nimport { addToCart, getCart, getFilters, updateFilter } from './local-storage';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport Pagination from 'tui-pagination';\n\n// const mainProductCard = document.querySelector('.main-box');\nconst productsListContainer = document.getElementById('products-list-container');\n// const formEl = document.querySelector('.search-form')\n\nlet pagination;\n\nasync function renderProducts() {\n    const filters = getFilters();\n    let page = filters.page || 1;\n    let limit = filters.limit || 6; // Використання значення за замовчуванням, якщо воно відсутнє в локальному сховищі\n\n    try {\n        const { data } = await getProducts(page, limit);\n        const { perPage, totalPages, results } = data;\n        const totalItems = perPage * totalPages;\n\n       \n    productsListContainer.innerHTML = createMarkup(results); // Оновлюємо тільки список продуктів\n\n        const container = document.getElementById('tui-pagination-container');\n        \n        if (!pagination) {\n            pagination = new Pagination(container, {\n                totalItems: totalItems,\n                itemsPerPage: limit,\n                visiblePages: 4,\n                centerAlign: true,\n                page: page, // Важливо: встановлення поточної сторінки\n            });\n\n            pagination.on('beforeMove', event => {\n              const currentPage = event.page;\n              const currentFilters = getFilters();\n              const newLimit = currentFilters.limit || 6; // Оновлення ліміту зі значенням за замовчуванням, якщо не встановлено\n              if (currentPage !== currentFilters.page || newLimit !== currentFilters.limit) {\n                  updateFilter('page', currentPage);\n                  updateFilter('limit', newLimit); // Оновлення ліміту\n                  renderProducts();\n              }\n          });\n        } else {\n            // Оновлення пагінації з новими даними\n            pagination.reset(totalItems);\n            pagination.movePageTo(page);\n        }\n\n        updateCartButtonIcons();\n    } catch (error) {\n        console.error('Error fetching products', error);\n    }\n}\n\n\nrenderProducts();\n\nexport function createMarkup(arr) {\n  const markup = `<ul class=\"card-container-list\">${arr\n    .map(item => {\n      const categoryWithoutUnderscore = item.category.split('_').join(' ');\n      return `\n            <li class=\"photo-card-list\">\n                <a class=\"product-modal-list\" href=\"#\">\n                    <div class=\"img-container-list\">\n                        <img class=\"product-image-list\" src=\"${item.img}\" alt=\"${item.name} photo\" width=140 height=140 loading=\"lazy\" />\n                    </div>\n                    <div class=\"product-info-list\">\n                        <h2 class=\"product-name-list\">${item.name}</h2>\n                        <div class='product-atributes-list'>\n                            <p class=\"atributes-info-list\">\n                                <b class=\"atributes-list\">Category:</b> ${categoryWithoutUnderscore}\n                            </p>\n                            <p class=\"atributes-info-list\">\n                                <b class=\"atributes-list\">Size:</b> ${item.size}\n                            </p>\n                            <p class=\"atributes-info-list\">\n                                <b class=\"atributes-list\">Popularity:</b> ${item.popularity}\n                            </p>\n                        </div>\n                        </a>\n                        <div class=\"price-and-btn-list\">\n                            <h2 class=\"product-price-list\">$${item.price}</h2>\n                            <button class='cart-btn-list' type=\"button\" data-product-id=\"${item._id}\">          \n                                <svg class=\"list-cart-svg-list\" width=\"18\" height=\"18\" >\n                                    <use href=\"${icons}#icon-heroicons-solid_shopping-cart-18x18\">\n                                    </use>\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n            </li>\n        `;\n    })\n    .join('')}</ul>`;\n    setTimeout(() => {\n      document.querySelectorAll('.cart-btn-list').forEach(button => {\n        button.addEventListener('click', (e) => {\n          const productId = e.currentTarget.dataset.productId;\n          const product = arr.find(item => item._id === productId);\n          if (product) {\n            handleCartButtonClick(product, arr);\n          } else {\n            console.error('Product not found for ID:', productId);\n          }\n        });\n      });\n    }, 0);\n\n  return markup;\n}\n\nfunction handleCartButtonClick(product, arr) {\n  const cart = getCart();\n  const productInCart = cart.find(item => item._id === product._id);\n\n  if (productInCart) {\n    // Якщо продукт вже є у кошику, виведіть повідомлення і не додавайте його знову\n    console.log('Product is already in the cart');\n  } else {\n    // Якщо продукт немає у кошику, додайте його\n    addToCart(product);\n    updateCartButtonIcons(arr);\n  }\n}\n\nfunction updateCartButtonIcons(arr) {\n  const cart = getCart();\n  document.querySelectorAll('.cart-btn-list').forEach(button => {\n    const productId = button.dataset.productId;\n    const productInCart = cart.find(item => item._id === productId);\n\n    if (productInCart) {\n      button.innerHTML = `\n        <svg class=\"list-cart-svg-list\" width=\"18\" height=\"18\">\n          <use href=\"${icons}#icon-check\"></use>\n        </svg>\n      `;\n      button.disabled = true; // Заборонити кліки на кнопку\n    } else {\n      button.innerHTML = `\n        <svg class=\"list-cart-svg-list\" width=\"18\" height=\"18\">\n          <use href=\"${icons}#icon-heroicons-solid_shopping-cart-18x18\"></use>\n        </svg>\n      `;\n      button.disabled = false; // Дозволити кліки на кнопку\n    }\n  });\n}\n\n"],"names":["icons","BASE_URL","getProducts","page","limit","axios","saveFilters","filters","getFilters","savedFilters","updateFilter","key","value","saveCart","cart","getCart","savedCart","addToCart","productToAdd","existingProductIndex","item","productsListContainer","pagination","renderProducts","data","perPage","totalPages","results","totalItems","createMarkup","container","Pagination","event","currentPage","currentFilters","newLimit","updateCartButtonIcons","error","arr","markup","categoryWithoutUnderscore","button","e","productId","product","handleCartButtonClick"],"mappings":"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"}