{"version":3,"file":"commonHelpers.js","sources":["../src/js/products-api.js","../src/js/products-list.js","../src/js/scroll.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://food-boutique.b.goit.study/api/products';\n\nexport function getProducts(page, limit) {\n    return axios.get(`${BASE_URL}`, {\n        params: {\n            page: page,\n            limit: limit,\n        },\n    });\n};\n\n","import icons from '../img/icone/symbol-defs.svg';\nimport { getProducts } from './products-api';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport Pagination from 'tui-pagination';\n\nconst mainProductCard = document.querySelector('.main-container');\n// const formEl = document.querySelector('.search-form')\n\nasync function renderProducts() {\n  let page = 1;\n  let limit;\n\n  if (window.innerWidth >= 1440) {\n    limit = 9;\n  } else if (window.innerWidth >= 768) {\n    limit = 8;\n  } else {\n    limit = 6;\n  }\n\n  try {\n    const { data } = await getProducts(page, limit);\n    console.log(data);\n      const { perPage, totalPages, results } = data;\n      const totalItems = perPage * totalPages;\n    console.log(results);\n    createMarkup(results);\n\n    mainProductCard.innerHTML =\n      createMarkup(results) +\n      `\n  <div id=\"tui-pagination-container\" class=\"tui-pagination\"></div>\n</div>\n`;\n\n    const container = document.getElementById('tui-pagination-container');\n    const pagination = new Pagination(container, {\n      totalItems: totalItems,\n      itemsPerPage: limit,\n      visiblePages: 4,\n      centerAlign: true,\n    });\n    pagination.on('change', page => {\n      renderProducts(page);\n    });\n  } catch (error) {\n    console.error('Error fetching products', error);\n  }\n}\n\n// Call the renderProducts function to automatically render the first page on page load\nrenderProducts();\n\nfunction createMarkup(arr) {\n  return `<div class=\"card-container-list\">${arr\n    .map(item => {\n      const categoryWithoutUnderscore = item.category.split('_').join(' ');\n      return `\n            <div class=\"photo-card-list\">\n                <a class=\"product-modal-list\" href=\"МОДАЛЬНЕ ВІКНО\">\n                    <div class=\"img-container-list\">\n                        <img class=\"product-image-list\" src=\"${item.img}\" alt=\"${item.name} photo\" width=140 height=140 loading=\"lazy\" />\n                    </div>\n                    <div class=\"product-info-list\">\n                        <h2 class=\"product-name-list\">${item.name}</h2>\n                        <div class='product-atributes-list'>\n                            <p class=\"atributes-info-list\">\n                                <b class=\"atributes-list\">Category:</b> ${categoryWithoutUnderscore}\n                            </p>\n                            <p class=\"atributes-info-list\">\n                                <b class=\"atributes-list\">Size:</b> ${item.size}\n                            </p>\n                            <p class=\"atributes-info-list\">\n                                <b class=\"atributes-list\">Popularity:</b> ${item.popularity}\n                            </p>\n                        </div>\n                        \n                        <div class=\"price-and-btn-list\">\n                            <h2 class=\"product-price-list\">$${item.price}</h2>\n                            <button class='cart-btn-list' type=\"button\">          \n                                <svg class='list-cart-svg-list' width=\"18\" height=\"18\" >\n                                    <use href=\"../img/icone/symbol-defs.svg#icon-heroicons-solid_shopping-cart-18x18\"></use>\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        `;\n    })\n    .join('')}\n\n\t `;\n}\n","window.onscroll = () => checkPosition();\n\n// тепер призначимо обробником подій трохи загальмовану функцію:\n; (() => {\n    window.addEventListener('scroll', throttle(checkPosition, 250));\n    window.addEventListener('resize', throttle(checkPosition, 250));\n})()\n\nasync function checkPosition() {\n    const body = document.querySelector('body');\n    // Нам потрібно знати висоту документа та висоту екрану:\n    const bodyHeight = document.body.offsetHeight;\n    const screenHeight = window.innerHeight;\n    // Записуємо, скільки пікселів користувач вже проскролив:\n    const scrolled = window.scrollY;\n    // Позначимо поріг, після наближення якого викликатимемо якусь дію. У нашому випадку – чверть екрана до кінця сторінки:\n    const threshold = bodyHeight - screenHeight / 4;\n    // Відстежуємо, де знаходиться низ екрана щодо сторінки:\n    const position = scrolled + screenHeight;\n\n    if (position > threshold) {\n        // Якщо ми перетнули смугу-поріг, викликаємо потрібну дію.\n        // await fetchPictures()\n        body.classList.add('body--no-transparency');\n    } else {\n        body.classList.remove('body--no-transparency');\n    }\n}\n\n\nfunction throttle(callee, timeout) {\n    // Обробку прокручування варто трохи пригальмовувати, щоб вона виконувалася трохи рідше і таким чином менше навантажувала браузер. Додамо функцію throttle()\n    let timer = null;\n\n    return function perform(...args) {\n        if (timer) return;\n\n        timer = setTimeout(() => {\n            callee(...args);\n\n            clearTimeout(timer);\n            timer = null;\n        }, timeout)\n    }\n}\n\n// Наступну частину коду копіюєте до себе\n// Слухач заганяємо в умову: активний, якщо карток більш однієї сторінки\n//  if (totalImages > perPage) {\n// window.addEventListener('scroll', handleScroll);\n//         }\n\n// Функція для бескінечного скролу\n// function handleScroll() {\n//     const { scrollTop, scrollHeight, clientHeight } = document.documentElement;\n\n//     if (scrollTop + clientHeight >= scrollHeight - 1) {\n// запускаємо функцію завантаження наступної сторінки\n// onLoadMore();\n//     }\n// }"],"names":["BASE_URL","getProducts","page","limit","axios","mainProductCard","renderProducts","data","perPage","totalPages","results","totalItems","createMarkup","container","Pagination","error","arr","item","categoryWithoutUnderscore","checkPosition","throttle","body","bodyHeight","screenHeight","scrolled","threshold","callee","timeout","timer","args"],"mappings":"6vBAEA,MAAMA,EAAW,kDAEV,SAASC,EAAYC,EAAMC,EAAO,CACrC,OAAOC,EAAM,IAAI,GAAGJ,IAAY,CAC5B,OAAQ,CACJ,KAAME,EACN,MAAOC,CACV,CACT,CAAK,CACL,CCNA,MAAME,EAAkB,SAAS,cAAc,iBAAiB,EAGhE,eAAeC,GAAiB,CAC9B,IAAIJ,EAAO,EACPC,EAEA,OAAO,YAAc,KACvBA,EAAQ,EACC,OAAO,YAAc,IAC9BA,EAAQ,EAERA,EAAQ,EAGV,GAAI,CACF,KAAM,CAAE,KAAAI,CAAI,EAAK,MAAMN,EAAYC,EAAMC,CAAK,EAC9C,QAAQ,IAAII,CAAI,EACd,KAAM,CAAE,QAAAC,EAAS,WAAAC,EAAY,QAAAC,CAAO,EAAKH,EACnCI,EAAaH,EAAUC,EAC/B,QAAQ,IAAIC,CAAO,EACnBE,EAAaF,CAAO,EAEpBL,EAAgB,UACdO,EAAaF,CAAO,EACpB;AAAA;AAAA;AAAA,EAKF,MAAMG,EAAY,SAAS,eAAe,0BAA0B,EACjD,IAAIC,EAAWD,EAAW,CAC3C,WAAYF,EACZ,aAAcR,EACd,aAAc,EACd,YAAa,EACnB,CAAK,EACU,GAAG,SAAUD,GAAQ,CAC9BI,EAAeJ,CAAI,CACzB,CAAK,CACF,OAAQa,EAAP,CACA,QAAQ,MAAM,0BAA2BA,CAAK,CAC/C,CACH,CAGAT,IAEA,SAASM,EAAaI,EAAK,CACzB,MAAO,oCAAoCA,EACxC,IAAIC,GAAQ,CACX,MAAMC,EAA4BD,EAAK,SAAS,MAAM,GAAG,EAAE,KAAK,GAAG,EACnE,MAAO;AAAA;AAAA;AAAA;AAAA,+DAIkDA,EAAK,aAAaA,EAAK;AAAA;AAAA;AAAA,wDAG9BA,EAAK;AAAA;AAAA;AAAA,0EAGaC;AAAA;AAAA;AAAA,sEAGJD,EAAK;AAAA;AAAA;AAAA,4EAGCA,EAAK;AAAA;AAAA;AAAA;AAAA;AAAA,8DAKnBA,EAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWnE,CAAK,EACA,KAAK,EAAE;AAAA;AAAA,GAGZ,CC7FA,OAAO,SAAW,IAAME,IAIpB,OAAO,iBAAiB,SAAUC,EAASD,EAAe,GAAG,CAAC,EAC9D,OAAO,iBAAiB,SAAUC,EAASD,EAAe,GAAG,CAAC,EAGlE,eAAeA,GAAgB,CAC3B,MAAME,EAAO,SAAS,cAAc,MAAM,EAEpCC,EAAa,SAAS,KAAK,aAC3BC,EAAe,OAAO,YAEtBC,EAAW,OAAO,QAElBC,EAAYH,EAAaC,EAAe,EAE7BC,EAAWD,EAEbE,EAGXJ,EAAK,UAAU,IAAI,uBAAuB,EAE1CA,EAAK,UAAU,OAAO,uBAAuB,CAErD,CAGA,SAASD,EAASM,EAAQC,EAAS,CAE/B,IAAIC,EAAQ,KAEZ,OAAO,YAAoBC,EAAM,CACzBD,IAEJA,EAAQ,WAAW,IAAM,CACrBF,EAAO,GAAGG,CAAI,EAEd,aAAaD,CAAK,EAClBA,EAAQ,IACX,EAAED,CAAO,EACb,CACL"}